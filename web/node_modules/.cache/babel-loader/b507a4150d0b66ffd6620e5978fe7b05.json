{"ast":null,"code":"import _slicedToArray from\"/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from\"react\";import{Table}from'react-bootstrap';var BillsHistory=function BillsHistory(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tableData=_useState2[0],setTableData=_useState2[1];var _props={action:'http://localhost:8080/history',method:'POST',mode:'cors'};var handleSubmit=function handleSubmit(){var formData={};var url=_props.action;var method=_props.method;var mode=_props.mode;var requestOptions={method:method,mode:mode,referrerPolicy:'origin-when-cross-origin',headers:{'Content-Type':'application/json; charset=utf-8'},body:JSON.stringify(formData)};fetch(url,requestOptions).then(function(response){return response.json();}).then(function(data){var tableDataTemp=Array.isArray(data)&&data.length>0?data:[];setTableData(tableDataTemp);});};useEffect(function(){handleSubmit();},[]);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Table,{striped:true,bordered:true,hover:true,size:\"sm\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"People\"),/*#__PURE__*/React.createElement(\"th\",null,\"Bill Amount\"),/*#__PURE__*/React.createElement(\"th\",null,\"Username\"),/*#__PURE__*/React.createElement(\"th\",null,\"Notes\"))),/*#__PURE__*/React.createElement(\"tbody\",null,tableData.length>0&&tableData.map(function(elem,index){return/*#__PURE__*/React.createElement(\"tr\",{key:elem.id},/*#__PURE__*/React.createElement(\"td\",null,elem.id),/*#__PURE__*/React.createElement(\"td\",null,elem.numberOfPeople),/*#__PURE__*/React.createElement(\"td\",null,\"$ \",elem.billAmount),/*#__PURE__*/React.createElement(\"td\",null,elem.username),/*#__PURE__*/React.createElement(\"td\",null,elem.notes));}))));};export default BillsHistory;","map":{"version":3,"sources":["/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/BillsHistory.js"],"names":["React","Fragment","useState","useEffect","Table","BillsHistory","tableData","setTableData","_props","action","method","mode","handleSubmit","formData","url","requestOptions","referrerPolicy","headers","body","JSON","stringify","fetch","then","response","json","data","tableDataTemp","Array","isArray","length","map","elem","index","id","numberOfPeople","billAmount","username","notes"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CACA,OAASC,KAAT,KAAsB,iBAAtB,CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,eACWH,QAAQ,CAAC,EAAD,CADnB,wCAChBI,SADgB,eACLC,YADK,eAEvB,GAAIC,CAAAA,MAAM,CAAG,CACTC,MAAM,CAAE,+BADC,CAETC,MAAM,CAAE,MAFC,CAGTC,IAAI,CAAE,MAHG,CAAb,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,GAAG,CAAGN,MAAM,CAACC,MAAjB,CACA,GAAIC,CAAAA,MAAM,CAAGF,MAAM,CAACE,MAApB,CACA,GAAIC,CAAAA,IAAI,CAAGH,MAAM,CAACG,IAAlB,CACA,GAAMI,CAAAA,cAAc,CAAG,CACnBL,MAAM,CAAEA,MADW,CAEnBC,IAAI,CAAEA,IAFa,CAGnBK,cAAc,CAAE,0BAHG,CAInBC,OAAO,CAAE,CACL,eAAgB,iCADX,CAJU,CAOnBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf,CAPa,CAAvB,CASAQ,KAAK,CAACP,GAAD,CAAMC,cAAN,CAAL,CAA2BO,IAA3B,CAAgC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAAxC,EAA6DF,IAA7D,CAAkE,SAAAG,IAAI,CAAI,CACtE,GAAIC,CAAAA,aAAa,CAAGC,KAAK,CAACC,OAAN,CAAcH,IAAd,GAAuBA,IAAI,CAACI,MAAL,CAAc,CAArC,CAAyCJ,IAAzC,CAAgD,EAApE,CACAlB,YAAY,CAACmB,aAAD,CAAZ,CACH,CAHD,EAIH,CAlBD,CAoBAvB,SAAS,CAAC,UAAM,CACZS,YAAY,GACf,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACI,oBAAC,QAAD,mBACI,oBAAC,KAAD,EAAO,OAAO,KAAd,CAAe,QAAQ,KAAvB,CAAwB,KAAK,KAA7B,CAA8B,IAAI,CAAC,IAAnC,eACI,8CACI,2CACI,kCADJ,cAEI,uCAFJ,cAGI,4CAHJ,cAII,yCAJJ,cAKI,sCALJ,CADJ,CADJ,cAUI,iCACKN,SAAS,CAACuB,MAAV,CAAmB,CAAnB,EAAwBvB,SAAS,CAACwB,GAAV,CAAc,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACpD,mBACI,0BAAI,GAAG,CAAED,IAAI,CAACE,EAAd,eACI,8BAAKF,IAAI,CAACE,EAAV,CADJ,cAEI,8BAAKF,IAAI,CAACG,cAAV,CAFJ,cAGI,mCAAOH,IAAI,CAACI,UAAZ,CAHJ,cAII,8BAAKJ,IAAI,CAACK,QAAV,CAJJ,cAKI,8BAAKL,IAAI,CAACM,KAAV,CALJ,CADJ,CASH,CAVwB,CAD7B,CAVJ,CADJ,CADJ,CA4BH,CA3DD,CA8DA,cAAehC,CAAAA,YAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Table } from 'react-bootstrap';\n\n\nconst BillsHistory = () => {\n    const [tableData, setTableData] = useState([]);\n    let _props = {\n        action: 'http://localhost:8080/history',\n        method: 'POST',\n        mode: 'cors'\n    }\n    const handleSubmit = () => {\n        let formData = {};\n        let url = _props.action;\n        let method = _props.method;\n        let mode = _props.mode;\n        const requestOptions = {\n            method: method,\n            mode: mode,\n            referrerPolicy: 'origin-when-cross-origin',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify(formData)\n        };\n        fetch(url, requestOptions).then(response => response.json()).then(data => {\n            let tableDataTemp = Array.isArray(data) && data.length > 0 ? data : [];\n            setTableData(tableDataTemp);\n        });\n    };\n\n    useEffect(() => {\n        handleSubmit();\n    }, []);\n\n    return (\n        <Fragment>\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>People</th>\n                        <th>Bill Amount</th>\n                        <th>Username</th>\n                        <th>Notes</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tableData.length > 0 && tableData.map((elem, index) => {\n                        return (\n                            <tr key={elem.id}>\n                                <td>{elem.id}</td>\n                                <td>{elem.numberOfPeople}</td>\n                                <td>$ {elem.billAmount}</td>\n                                <td>{elem.username}</td>\n                                <td>{elem.notes}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        </Fragment>\n    );\n};\n\n\nexport default BillsHistory;"]},"metadata":{},"sourceType":"module"}