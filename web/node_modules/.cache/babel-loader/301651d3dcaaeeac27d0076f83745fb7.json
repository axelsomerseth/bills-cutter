{"ast":null,"code":"var _jsxFileName = \"/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/SplitResult.js\";\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst SplitResult = props => {\n  // const [show, setShow] = useState(false);\n  // const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: props.show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"Modal heading\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"Woohoo, you're reading this text in a modal!\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Close\"))));\n};\n\nexport default SplitResult;","map":{"version":3,"sources":["/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/SplitResult.js"],"names":["React","useState","Modal","Button","SplitResult","props","show","handleClose","onHide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B;AACA;AACA;AAEA,sBACI,uDAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAK,CAACC,IAAnB;AAAyB,IAAA,MAAM,EAAEC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,eAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAJJ,eAKI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEF,KAAK,CAACG,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CALJ,CAJJ,CADJ;AAqBH,CA1BD;;AA4BA,eAAeJ,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\n\nconst SplitResult = (props) => {\n    // const [show, setShow] = useState(false);\n    // const handleClose = () => setShow(false);\n    // const handleShow = () => setShow(true);\n\n    return (\n        <>\n            {/* <Button variant=\"primary\" onClick={handleShow}>\n                Launch demo modal\n            </Button> */}\n            <Modal show={props.show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={props.onHide}>\n                        Close\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default SplitResult;"]},"metadata":{},"sourceType":"module"}