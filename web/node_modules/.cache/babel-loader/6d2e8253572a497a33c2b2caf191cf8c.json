{"ast":null,"code":"var _jsxFileName = \"/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/SplitResult.js\";\nimport React, { useState } from 'react';\nimport { Modal, Button, Table } from 'react-bootstrap';\n\nconst SplitResult = props => {\n  let tableData = [];\n\n  if (props.username && props.splitResult) {\n    tableData.push({\n      key: 1,\n      username: props.username,\n      splitResult: props.splitResult\n    });\n  }\n\n  console.log(props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: props.show,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Results\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Result of your splitted bill\", /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, \"Amount\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, tableData.map((elem, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 41\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 41\n      }\n    }, elem.username), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }\n    }, \"$ \", elem.splitResult));\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Close\"))));\n};\n\nexport default SplitResult;","map":{"version":3,"sources":["/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/SplitResult.js"],"names":["React","useState","Modal","Button","Table","SplitResult","props","tableData","username","splitResult","push","key","console","log","show","map","elem","index","onHide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,QAAqC,iBAArC;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAID,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACG,WAA5B,EAAyC;AACrCF,IAAAA,SAAS,CAACG,IAAV,CAAe;AACXC,MAAAA,GAAG,EAAE,CADM;AAEXH,MAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFL;AAGXC,MAAAA,WAAW,EAAEH,KAAK,CAACG;AAHR,KAAf;AAKH;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,sBACI,uDACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAK,CAACQ,IAAnB;AAAyB,uBAAgB,+BAAzC;AAAyE,IAAA,QAAQ,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,eAMI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAEI,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,IAAI,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,SAAS,CAACQ,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,GAAG,CAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACR,QAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOQ,IAAI,CAACP,WAAZ,CAHJ,CADJ;AAOH,GARA,CADL,CARJ,CAFJ,CANJ,eA6BI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,OAAO,EAAEH,KAAK,CAACY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CA7BJ,CADJ,CADJ;AAuCH,CAjDD;;AAoDA,eAAeb,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button, Table } from 'react-bootstrap';\n\n\nconst SplitResult = (props) => {\n    let tableData = [];\n    if (props.username && props.splitResult) {\n        tableData.push({ \n            key: 1,\n            username: props.username,\n            splitResult: props.splitResult\n        });\n    }\n    console.log(props);\n    return (\n        <>\n            <Modal show={props.show} aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Results\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Result of your splitted bill\n                    <Table striped bordered hover size=\"sm\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>First Name</th>\n                                <th>Amount</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {tableData.map((elem, index) => {\n                                return (\n                                    <tr>\n                                        <td>{index + 1}</td>\n                                        <td>{elem.username}</td>\n                                        <td>$ {elem.splitResult}</td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </Table>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={props.onHide}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\n\nexport default SplitResult;"]},"metadata":{},"sourceType":"module"}