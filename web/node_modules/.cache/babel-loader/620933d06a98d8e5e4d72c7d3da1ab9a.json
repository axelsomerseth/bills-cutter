{"ast":null,"code":"import _slicedToArray from\"/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Form,Button}from'react-bootstrap';import SplitResult from\"./SplitResult\";import{useAuth0}from\"../react-auth0-spa\";var FeedForm=function FeedForm(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),numberOfPeople=_useState2[0],setNumberOfPeople=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),billAmount=_useState4[0],setBillAmount=_useState4[1];var _useState5=useState('Unregistered'),_useState6=_slicedToArray(_useState5,2),username=_useState6[0],setUsername=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),notes=_useState8[0],setNotes=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),splitResult=_useState10[0],setSplitResult=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),modalShow=_useState12[0],setModalShow=_useState12[1];var _useAuth=useAuth0(),loading=_useAuth.loading,user=_useAuth.user;var _props={action:'http://44.227.190.37:8080/api/',method:'POST',mode:'cors'};useEffect(function(){// document.title = `Welcome, ${username}!`;\n});var handleSubmit=function handleSubmit(event){event.preventDefault();if(!loading&&user){setUsername(user.nickname);}var formData={numberOfPeople:Number(numberOfPeople),billAmount:!isNaN(Number(billAmount))?Number(billAmount):0,username:user&&user.nickname?user&&user.nickname:username,notes:notes};var url=_props.action;var method=_props.method;var mode=_props.mode;var requestOptions={method:method,mode:mode,referrerPolicy:'origin-when-cross-origin',headers:{'Content-Type':'application/json; charset=utf-8'},body:JSON.stringify(formData)};fetch(url,requestOptions).then(function(response){return response.json();}).then(function(data){setSplitResult(!isNaN(data.money)?data.money:0);setModalShow(true);});};return/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"feedForm.numberOfPeople\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Number of people\"),/*#__PURE__*/React.createElement(Form.Control,{as:\"select\",value:numberOfPeople,name:\"numberOfPeople\",onChange:function onChange(event){return setNumberOfPeople(event.target.value);}},/*#__PURE__*/React.createElement(\"option\",null,\"Choose...\"),/*#__PURE__*/React.createElement(\"option\",null,\"1\"),/*#__PURE__*/React.createElement(\"option\",null,\"2\"),/*#__PURE__*/React.createElement(\"option\",null,\"3\"),/*#__PURE__*/React.createElement(\"option\",null,\"4\"),/*#__PURE__*/React.createElement(\"option\",null,\"5\"),/*#__PURE__*/React.createElement(\"option\",null,\"6\"),/*#__PURE__*/React.createElement(\"option\",null,\"7\"),/*#__PURE__*/React.createElement(\"option\",null,\"8\"),/*#__PURE__*/React.createElement(\"option\",null,\"9\")),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"Please select the quantity of people.\"))),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"feedForm.billAmount\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Bill amount\"),/*#__PURE__*/React.createElement(Form.Control,{name:\"billAmount\",type:\"number\",value:billAmount,onChange:function onChange(event){return setBillAmount(event.target.value);}}))),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"feedForm.notes\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Notes\"),/*#__PURE__*/React.createElement(Form.Control,{as:\"textarea\",rows:\"3\",name:\"notes\",value:notes,onChange:function onChange(event){return setNotes(event.target.value);}}))),/*#__PURE__*/React.createElement(Button,{variant:\"success\",type:\"submit\"},\"Submit\"),/*#__PURE__*/React.createElement(SplitResult,{show:modalShow,onHide:function onHide(){return setModalShow(false);},username:username,splitResult:splitResult}));};export default FeedForm;","map":{"version":3,"sources":["/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/FeedForm.js"],"names":["React","useState","useEffect","Form","Button","SplitResult","useAuth0","FeedForm","numberOfPeople","setNumberOfPeople","billAmount","setBillAmount","username","setUsername","notes","setNotes","splitResult","setSplitResult","modalShow","setModalShow","loading","user","_props","action","method","mode","handleSubmit","event","preventDefault","nickname","formData","Number","isNaN","url","requestOptions","referrerPolicy","headers","body","JSON","stringify","fetch","then","response","json","data","money","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport SplitResult from \"./SplitResult\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\n\nconst FeedForm = () => {\n    const [numberOfPeople, setNumberOfPeople] = useState(0);\n    const [billAmount, setBillAmount] = useState(0);\n    const [username, setUsername] = useState('Unregistered');\n    const [notes, setNotes] = useState('');\n    const [splitResult, setSplitResult] = useState(0);\n    const [modalShow, setModalShow] = useState(false);\n    const { loading, user } = useAuth0();\n    let _props = {\n        action: 'http://44.227.190.37:8080/api/',\n        method: 'POST',\n        mode: 'cors'\n    }\n\n    useEffect(() => {\n        // document.title = `Welcome, ${username}!`;\n    });\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        if (!loading && user) {\n            setUsername(user.nickname);\n        }\n        let formData = {\n            numberOfPeople: Number(numberOfPeople),\n            billAmount: !isNaN(Number(billAmount)) ? Number(billAmount) : 0,\n            username: user && user.nickname ? user && user.nickname : username,\n            notes: notes\n        };\n        let url = _props.action;\n        let method = _props.method;\n        let mode = _props.mode;\n        const requestOptions = {\n            method: method,\n            mode: mode,\n            referrerPolicy: 'origin-when-cross-origin',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify(formData)\n        };\n        fetch(url, requestOptions).then(response => response.json()).then(data => {\n            setSplitResult(!isNaN(data.money) ? data.money : 0);\n            setModalShow(true);\n        });\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Row>\n                <Form.Group controlId=\"feedForm.numberOfPeople\">\n                    <Form.Label>Number of people</Form.Label>\n                    <Form.Control as=\"select\" value={numberOfPeople} name=\"numberOfPeople\" onChange={event => setNumberOfPeople(event.target.value)}>\n                        <option>Choose...</option>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                        <option>6</option>\n                        <option>7</option>\n                        <option>8</option>\n                        <option>9</option>\n                    </Form.Control>\n                    <Form.Text className=\"text-muted\">\n                        Please select the quantity of people.\n                    </Form.Text>\n                </Form.Group>\n            </Form.Row>\n            <Form.Row>\n                <Form.Group controlId=\"feedForm.billAmount\">\n                    <Form.Label>Bill amount</Form.Label>\n                    <Form.Control name=\"billAmount\" type=\"number\" value={billAmount} onChange={event => setBillAmount(event.target.value)} />\n                </Form.Group>\n            </Form.Row>\n            <Form.Row>\n                <Form.Group controlId=\"feedForm.notes\">\n                    <Form.Label>Notes</Form.Label>\n                    <Form.Control as=\"textarea\" rows=\"3\" name=\"notes\" value={notes} onChange={event => setNotes(event.target.value)} />\n                </Form.Group>\n            </Form.Row>\n            <Button variant=\"success\" type=\"submit\">\n                Submit\n            </Button>\n            <SplitResult show={modalShow} onHide={() => setModalShow(false)} username={username} splitResult={splitResult} />\n        </Form>\n    );\n};\n\n\nexport default FeedForm;"]},"metadata":{},"sourceType":"module"}