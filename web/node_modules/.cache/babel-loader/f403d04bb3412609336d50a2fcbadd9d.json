{"ast":null,"code":"var _jsxFileName = \"/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/BillsHistory.js\";\nimport React, { Fragment, useState, useEffect } from \"react\"; // import { useAuth0 } from \"../react-auth0-spa\";\n\nimport { Table, Form, Button } from 'react-bootstrap';\n\nconst BillsHistory = props => {\n  const [tableData, setTableData] = useState([]);\n  let _props = {\n    action: 'http://localhost:8080/history',\n    method: 'POST',\n    mode: 'cors'\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let formData = {};\n    let url = _props.action;\n    let method = _props.method;\n    let mode = _props.mode;\n    const requestOptions = {\n      method: method,\n      mode: mode,\n      referrerPolicy: 'origin-when-cross-origin',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(formData)\n    };\n    fetch(url, requestOptions).then(response => response.json()).then(data => {\n      tableData = Array.isArray(data) && data.length > 0 ? data : []; // setSplitResult(!isNaN(data.money) ? data.money : 0);\n      // setModalShow(true);\n    });\n  }; // const { loading, user } = useAuth0();\n  // if (loading || !user) {\n  //     return <div>Loading...</div>;\n  // }\n  // if (props.username && props.splitResult) {\n  //     tableData.push({\n  //         key: Number(props.key),\n  //         numberOfPeople: Number(props.numberOfPeople),\n  //         billAmount: !isNaN(Number(props.billAmount)) ? Number(props.billAmount) : 0,\n  //         username: props.username,\n  //         notes: props.notes\n  //     });\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Get table data\")), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Number of People\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Bill Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"Notes\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, tableData.length === 0 && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, props.key), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, props.numberOfPeople), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"$ \", props.billAmount), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, props.username), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, props.notes)), tableData.length > 0 && tableData.map((elem, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, elem.key), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, elem.numberOfPeople), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, \"$ \", elem.billAmount), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, elem.username), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, elem.notes));\n  }))));\n};\n\nexport default BillsHistory;","map":{"version":3,"sources":["/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/BillsHistory.js"],"names":["React","Fragment","useState","useEffect","Table","Form","Button","BillsHistory","props","tableData","setTableData","_props","action","method","mode","handleSubmit","event","preventDefault","formData","url","requestOptions","referrerPolicy","headers","body","JSON","stringify","fetch","then","response","json","data","Array","isArray","length","key","numberOfPeople","billAmount","username","notes","map","elem","index"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n// import { useAuth0 } from \"../react-auth0-spa\";\nimport { Table, Form, Button } from 'react-bootstrap';\n\nconst BillsHistory = (props) => {\n    const [tableData, setTableData] = useState([]);\n\n    let _props = {\n        action: 'http://localhost:8080/history',\n        method: 'POST',\n        mode: 'cors'\n    }\n    const handleSubmit = event => {\n        event.preventDefault();\n        let formData = {};\n        let url = _props.action;\n        let method = _props.method;\n        let mode = _props.mode;\n        const requestOptions = {\n            method: method,\n            mode: mode,\n            referrerPolicy: 'origin-when-cross-origin',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify(formData)\n        };\n        fetch(url, requestOptions).then(response => response.json()).then(data => {\n            tableData = Array.isArray(data) && data.length > 0 ? data : [];\n            // setSplitResult(!isNaN(data.money) ? data.money : 0);\n            // setModalShow(true);\n        });\n    };\n    // const { loading, user } = useAuth0();\n\n    // if (loading || !user) {\n    //     return <div>Loading...</div>;\n    // }\n\n    // if (props.username && props.splitResult) {\n    //     tableData.push({\n    //         key: Number(props.key),\n    //         numberOfPeople: Number(props.numberOfPeople),\n    //         billAmount: !isNaN(Number(props.billAmount)) ? Number(props.billAmount) : 0,\n    //         username: props.username,\n    //         notes: props.notes\n    //     });\n    // }\n\n    return (\n        <Fragment>\n            <Form onSubmit={handleSubmit}>\n                <Button variant=\"success\" type=\"submit\">Get table data</Button>\n            </Form>\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Number of People</th>\n                        <th>Bill Amount</th>\n                        <th>Username</th>\n                        <th>Notes</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tableData.length === 0 && (\n                        <tr>\n                            <td>{props.key}</td>\n                            <td>{props.numberOfPeople}</td>\n                            <td>$ {props.billAmount}</td>\n                            <td>{props.username}</td>\n                            <td>{props.notes}</td>\n                        </tr>\n                    )}\n                    {tableData.length > 0 && tableData.map((elem, index) => {\n                        return (\n                            <tr>\n                                <td>{elem.key}</td>\n                                <td>{elem.numberOfPeople}</td>\n                                <td>$ {elem.billAmount}</td>\n                                <td>{elem.username}</td>\n                                <td>{elem.notes}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        </Fragment>\n    );\n};\n\nexport default BillsHistory;"]},"metadata":{},"sourceType":"module"}