{"ast":null,"code":"var _jsxFileName = \"/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/FeedForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport SplitResult from \"./SplitResult\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst FeedForm = props => {\n  const [numberOfPeople, setNumberOfPeople] = useState(0);\n  const [billAmount, setBillAmount] = useState(0);\n  const [username, setUsername] = useState('Unregistered');\n  const [notes, setNotes] = useState('');\n  const [splitResult, setSplitResult] = useState(0);\n  const [modalShow, setModalShow] = useState(false);\n  const {\n    loading,\n    user\n  } = useAuth0();\n  useEffect(() => {// document.title = `Welcome, ${username}!`;\n  });\n  /**\n   *  This fancy comment is just for fun\n   */\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let formData = {\n      numberOfPeople: Number(numberOfPeople),\n      billAmount: !isNaN(Number(billAmount)) ? Number(billAmount) : 0,\n      username: username\n    };\n\n    if (!loading && user) {\n      setUsername(user.nickname);\n    }\n\n    let url = props.action;\n    let method = props.method;\n    let mode = props.mode;\n    const requestOptions = {\n      method: method,\n      mode: mode,\n      referrerPolicy: 'origin-when-cross-origin',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(formData)\n    };\n    fetch(url, requestOptions).then(response => response.json()).then(data => {\n      setSplitResult(!isNaN(data.money) ? data.money : 0);\n      setModalShow(true);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"feedForm.numberOfPeople\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Number of people\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: numberOfPeople,\n    name: \"numberOfPeople\",\n    onChange: event => setNumberOfPeople(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"6\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"7\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"8\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"9\")), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Please select the quantity of people.\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"feedForm.billAmount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Bill amount\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"billAmount\",\n    type: \"number\",\n    value: billAmount,\n    onChange: event => setBillAmount(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"feedForm.notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Bill amount\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    name: \"notes\",\n    value: notes,\n    onChange: event => setNotes(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(SplitResult, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    username: username,\n    splitResult: splitResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default FeedForm;","map":{"version":3,"sources":["/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/FeedForm.js"],"names":["React","useState","useEffect","Form","Button","SplitResult","useAuth0","FeedForm","props","numberOfPeople","setNumberOfPeople","billAmount","setBillAmount","username","setUsername","notes","setNotes","splitResult","setSplitResult","modalShow","setModalShow","loading","user","handleSubmit","event","preventDefault","formData","Number","isNaN","nickname","url","action","method","mode","requestOptions","referrerPolicy","headers","body","JSON","stringify","fetch","then","response","json","data","money","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport SplitResult from \"./SplitResult\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\n\nconst FeedForm = (props) => {\n    const [numberOfPeople, setNumberOfPeople] = useState(0);\n    const [billAmount, setBillAmount] = useState(0);\n    const [username, setUsername] = useState('Unregistered');\n    const [notes, setNotes] = useState('');\n    const [splitResult, setSplitResult] = useState(0);\n    const [modalShow, setModalShow] = useState(false);\n    const { loading, user } = useAuth0();\n\n    useEffect(() => {\n        // document.title = `Welcome, ${username}!`;\n    });\n\n    /**\n     *  This fancy comment is just for fun\n     */\n    const handleSubmit = event => {\n        event.preventDefault();\n        let formData = {\n            numberOfPeople: Number(numberOfPeople),\n            billAmount: !isNaN(Number(billAmount)) ? Number(billAmount) : 0,\n            username: username\n        };\n        if (!loading && user) {\n            setUsername(user.nickname);\n        }\n        let url = props.action;\n        let method = props.method;\n        let mode = props.mode;\n        const requestOptions = {\n            method: method,\n            mode: mode,\n            referrerPolicy: 'origin-when-cross-origin',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify(formData)\n        };\n        fetch(url, requestOptions).then(response => response.json()).then(data => {\n            setSplitResult(!isNaN(data.money) ? data.money : 0);\n            setModalShow(true);\n        });\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Row>\n                <Form.Group controlId=\"feedForm.numberOfPeople\">\n                    <Form.Label>Number of people</Form.Label>\n                    <Form.Control as=\"select\" value={numberOfPeople} name=\"numberOfPeople\" onChange={event => setNumberOfPeople(event.target.value)}>\n                        <option>Choose...</option>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                        <option>6</option>\n                        <option>7</option>\n                        <option>8</option>\n                        <option>9</option>\n                    </Form.Control>\n                    <Form.Text className=\"text-muted\">\n                        Please select the quantity of people.\n                    </Form.Text>\n                </Form.Group>\n            </Form.Row>\n            <Form.Row>\n                <Form.Group controlId=\"feedForm.billAmount\">\n                    <Form.Label>Bill amount</Form.Label>\n                    <Form.Control name=\"billAmount\" type=\"number\" value={billAmount} onChange={event => setBillAmount(event.target.value)} />\n                </Form.Group>\n            </Form.Row>\n            <Form.Row>\n                <Form.Group controlId=\"feedForm.notes\">\n                    <Form.Label>Bill amount</Form.Label>\n                    <Form.Control as=\"textarea\" rows=\"3\" name=\"notes\" value={notes} onChange={event => setNotes(event.target.value)} />\n                </Form.Group>\n            </Form.Row>\n            <Button variant=\"success\" type=\"submit\">\n                Submit\n            </Button>\n            <SplitResult show={modalShow} onHide={() => setModalShow(false)} username={username} splitResult={splitResult} />\n        </Form>\n    );\n};\n\n\nexport default FeedForm;"]},"metadata":{},"sourceType":"module"}