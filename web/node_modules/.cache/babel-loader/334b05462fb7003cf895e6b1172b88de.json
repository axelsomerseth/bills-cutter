{"ast":null,"code":"var _jsxFileName = \"/Users/axelsomerseth/Code/Acklen Challenge/Bills Cutter/BillsCutter/web/src/feed/Feed.js\";\nimport React from 'react';\nimport './Feed.css';\nimport '../bootstrap.css';\n\nclass FeedForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfPeople: 0,\n      billAmount: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    let action = this.props.action;\n    let method = this.props.method;\n    let mode = this.props.mode;\n    event.preventDefault();\n    let formData = {\n      numberOfPeople: Number(this.state.numberOfPeople),\n      billAmount: Number(this.state.billAmount)\n    };\n    this.getData(formData);\n  }\n\n  getData(formData) {\n    let url = this.props.action;\n    let method = this.props.method;\n    let formData2 = {\n      title: 'React POST Request Example'\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData2)\n    };\n    fetch('http://localhost:8080/', requestOptions).then(response => response.json()).then(data => console.log(data));\n  } // getDataAsync(formData) {\n  //     let url = this.props.action;\n  //     let method = this.props.method;\n  //     const requestOptions = {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify({ title: 'React POST Request Example' })\n  //     };\n  //     const response = await fetch(url, requestOptions);\n  //     const data = await response.json();\n  //     console.log(data);\n  // }\n  // getData(formData) {\n  //     var xhr = new XMLHttpRequest();\n  //     const handler = () => {\n  //         console.log('Test');\n  //     };\n  //     xhr.addEventListener('load', () => {\n  //         console.log(xhr.responseText);\n  //     })\n  //     xhr.open(this.props.method, this.props.action, true);\n  //     // xhr.withCredentials = false;\n  //     xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\n  //     // xhr.setRequestHeader('Access-Control-Allow-Credentials', 'false');\n  //     xhr.setRequestHeader('X-PINGOTHER', 'pingpong');\n  //     // xhr.setRequestHeader('Content-Type', 'application/xml');\n  //     xhr.onreadystatechange = handler;\n  //     xhr.send();\n  //     // xhr.send(JSON.stringify(formData))\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Number of people:\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"feed-form-inputs\",\n      name: \"numberOfPeople\",\n      type: \"number\",\n      value: this.state.numberOfPeople,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Bill amount:\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"feed-form-inputs\",\n      name: \"billAmount\",\n      type: \"number\",\n      value: this.state.billAmount,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"buttons\",\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default FeedForm;","map":{"version":3,"sources":["/Users/axelsomerseth/Code/Acklen Challenge/Bills Cutter/BillsCutter/web/src/feed/Feed.js"],"names":["React","FeedForm","Component","constructor","props","state","numberOfPeople","billAmount","handleChange","bind","handleSubmit","event","target","value","name","setState","action","method","mode","preventDefault","formData","Number","getData","url","formData2","title","requestOptions","headers","body","JSON","stringify","fetch","then","response","json","data","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Feed.css';\nimport '../bootstrap.css';\n\nclass FeedForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { numberOfPeople: 0, billAmount: 0 };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({ [name]: value });\n    }\n    handleSubmit(event) {\n        let action = this.props.action;\n        let method = this.props.method;\n        let mode = this.props.mode;\n        event.preventDefault();\n        let formData = { numberOfPeople: Number(this.state.numberOfPeople), billAmount: Number(this.state.billAmount) };\n        this.getData(formData);\n    }\n    getData(formData) {\n        let url = this.props.action;\n        let method = this.props.method;\n        let formData2 = { title: 'React POST Request Example' };\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(formData2)\n        };\n        fetch('http://localhost:8080/', requestOptions)\n            .then(response => response.json())\n            .then(data => console.log(data));\n    }\n    // getDataAsync(formData) {\n    //     let url = this.props.action;\n    //     let method = this.props.method;\n    //     const requestOptions = {\n    //         method: 'POST',\n    //         headers: { 'Content-Type': 'application/json' },\n    //         body: JSON.stringify({ title: 'React POST Request Example' })\n    //     };\n    //     const response = await fetch(url, requestOptions);\n    //     const data = await response.json();\n    //     console.log(data);\n    // }\n    // getData(formData) {\n    //     var xhr = new XMLHttpRequest();\n    //     const handler = () => {\n    //         console.log('Test');\n    //     };\n    //     xhr.addEventListener('load', () => {\n    //         console.log(xhr.responseText);\n    //     })\n    //     xhr.open(this.props.method, this.props.action, true);\n    //     // xhr.withCredentials = false;\n    //     xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\n    //     // xhr.setRequestHeader('Access-Control-Allow-Credentials', 'false');\n    //     xhr.setRequestHeader('X-PINGOTHER', 'pingpong');\n    //     // xhr.setRequestHeader('Content-Type', 'application/xml');\n    //     xhr.onreadystatechange = handler;\n    //     xhr.send();\n    //     // xhr.send(JSON.stringify(formData))\n    // }\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Number of people:\n                    <input className=\"feed-form-inputs\" name=\"numberOfPeople\" type=\"number\" value={this.state.numberOfPeople} onChange={this.handleChange} />\n                </label>\n                <br />\n                <label>\n                    Bill amount:\n                    <input className=\"feed-form-inputs\" name=\"billAmount\" type=\"number\" value={this.state.billAmount} onChange={this.handleChange} />\n                </label>\n                <br />\n                <input className=\"buttons\" type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}\nexport default FeedForm;"]},"metadata":{},"sourceType":"module"}