{"ast":null,"code":"var _jsxFileName = \"/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/BillsHistory.js\";\nimport React, { Fragment } from \"react\"; // import { useAuth0 } from \"../react-auth0-spa\";\n\nimport { Table } from 'react-bootstrap';\n\nconst BillsHistory = props => {\n  let _props = {\n    action: 'http://localhost:8080/',\n    method: 'POST',\n    mode: 'cors'\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(loading);\n    console.log(user);\n\n    if (!loading && user) {\n      setUsername(user.nickname);\n    }\n\n    let formData = {\n      numberOfPeople: Number(numberOfPeople),\n      billAmount: !isNaN(Number(billAmount)) ? Number(billAmount) : 0,\n      username: user && user.nickname ? user && user.nickname : username,\n      notes: notes\n    };\n    let url = _props.action;\n    let method = _props.method;\n    let mode = _props.mode;\n    const requestOptions = {\n      method: method,\n      mode: mode,\n      referrerPolicy: 'origin-when-cross-origin',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(formData)\n    };\n    fetch(url, requestOptions).then(response => response.json()).then(data => {\n      setSplitResult(!isNaN(data.money) ? data.money : 0);\n      setModalShow(true);\n    });\n  }; // const { loading, user } = useAuth0();\n  // if (loading || !user) {\n  //     return <div>Loading...</div>;\n  // }\n  // let tableData = [];\n  // if (props.username && props.splitResult) {\n  //     tableData.push({\n  //         key: Number(props.key),\n  //         numberOfPeople: Number(props.numberOfPeople),\n  //         billAmount: !isNaN(Number(props.billAmount)) ? Number(props.billAmount) : 0,\n  //         username: props.username,\n  //         notes: props.notes\n  //     });\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Get table data\")), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Number of People\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Bill Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Notes\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, props.key), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, props.numberOfPeople), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"$ \", props.billAmount), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, props.username), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, props.notes)))));\n};\n\nexport default BillsHistory;","map":{"version":3,"sources":["/Users/axelsomerseth/Code/acklen-challenge/bills-cutter/BillsCutter/web/src/components/BillsHistory.js"],"names":["React","Fragment","Table","BillsHistory","props","_props","action","method","mode","handleSubmit","event","preventDefault","console","log","loading","user","setUsername","nickname","formData","numberOfPeople","Number","billAmount","isNaN","username","notes","url","requestOptions","referrerPolicy","headers","body","JSON","stringify","fetch","then","response","json","data","setSplitResult","money","setModalShow","key"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\n// import { useAuth0 } from \"../react-auth0-spa\";\nimport { Table } from 'react-bootstrap';\n\nconst BillsHistory = (props) => {\n    let _props = {\n        action: 'http://localhost:8080/',\n        method: 'POST',\n        mode: 'cors'\n    }\n    const handleSubmit = event => {\n        event.preventDefault();\n        console.log(loading);\n        console.log(user);\n        if (!loading && user) {\n            setUsername(user.nickname);\n        }\n        let formData = {\n            numberOfPeople: Number(numberOfPeople),\n            billAmount: !isNaN(Number(billAmount)) ? Number(billAmount) : 0,\n            username: user && user.nickname ? user && user.nickname : username,\n            notes: notes\n        };\n        let url = _props.action;\n        let method = _props.method;\n        let mode = _props.mode;\n        const requestOptions = {\n            method: method,\n            mode: mode,\n            referrerPolicy: 'origin-when-cross-origin',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify(formData)\n        };\n        fetch(url, requestOptions).then(response => response.json()).then(data => {\n            setSplitResult(!isNaN(data.money) ? data.money : 0);\n            setModalShow(true);\n        });\n    };\n    // const { loading, user } = useAuth0();\n\n    // if (loading || !user) {\n    //     return <div>Loading...</div>;\n    // }\n\n    // let tableData = [];\n    // if (props.username && props.splitResult) {\n    //     tableData.push({\n    //         key: Number(props.key),\n    //         numberOfPeople: Number(props.numberOfPeople),\n    //         billAmount: !isNaN(Number(props.billAmount)) ? Number(props.billAmount) : 0,\n    //         username: props.username,\n    //         notes: props.notes\n    //     });\n    // }\n\n    return (\n        <Fragment>\n            <Form onSubmit={handleSubmit}>\n                <Button variant=\"success\" type=\"submit\">Get table data</Button>\n            </Form>\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Number of People</th>\n                        <th>Bill Amount</th>\n                        <th>Username</th>\n                        <th>Notes</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {(\n                        <tr>\n                            <td>{props.key}</td>\n                            <td>{props.numberOfPeople}</td>\n                            <td>$ {props.billAmount}</td>\n                            <td>{props.username}</td>\n                            <td>{props.notes}</td>\n                        </tr>\n                    )}\n                    {/* {tableData.length > 0 && tableData.map((elem, index) => {\n                        return (\n                            <tr>\n                                <td>{index + 1}</td>\n                                <td>{elem.username}</td>\n                                <td>$ {elem.splitResult}</td>\n                            </tr>\n                        );\n                    })} */}\n                </tbody>\n            </Table>\n        </Fragment>\n    );\n};\n\nexport default BillsHistory;"]},"metadata":{},"sourceType":"module"}